[project]
name = "browserbot"
version = "0.1.0"
description = "A robust browser automation agent powered by AI"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "playwright>=1.41.0",
    "langchain>=0.1.0",
    "langchain-openai>=0.0.5",
    "langchain-community>=0.0.15",
    "python-dotenv>=1.0.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "aiohttp>=3.9.1",
    "aiofiles>=24.1.0",
    "asyncio>=3.4.3",
    "tenacity>=8.2.3",
    "structlog>=24.1.0",
    "redis>=5.0.1",
    "sqlalchemy>=2.0.23",
    "alembic>=1.13.0",
    "prometheus-client>=0.19.0",
    "opentelemetry-api>=1.22.0",
    "opentelemetry-sdk>=1.22.0",
    "opentelemetry-instrumentation>=0.43b0",
    "halo>=0.0.31",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.23.2",
    "pytest-cov>=4.1.0",
    "pytest-playwright>=0.4.3",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    "pytest-html>=4.1.1",
    "black>=23.12.0",
    "ruff>=0.1.8",
    "mypy>=1.7.1",
    "pre-commit>=3.6.0",
    "ipython>=8.18.1",
    "ipdb>=0.13.13",
]

[build-system]
requires = ["setuptools>=69.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py311"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = "-v --tb=short --strict-markers --disable-warnings"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
    "slow: Slow tests",
]
asyncio_mode = "auto"